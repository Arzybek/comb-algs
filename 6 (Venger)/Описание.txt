Сначала нужно привести все данные к виду, с которым может работать Венгерский алгоритм.
Расчет прибыли для каждой пары «товар — производитель» определяем по следующей модели:
Прибыль = Цена - Издержки - Затраты - матрица h в коде.
Формируем матрицу годовой прибыли с учетом спроса: Hij = h[i,j]*Q[i], где Q - объём выпуска.
Модифицируем матрицу умножением всех элементов на (-1) и сложением с максимальным числом матрицы и для 
устранения дисбаланса вводим фиктивные продукции с нулевой прибылью, поскольку матрица должна быть квадратной.
Затем запускаем на этой матрице Венгерский алгоритм (неформальное описание из "Комбинаторные Алгоритмы", Асанов М.О): 
1) преобразовать веса ребер данного графа таким образом, чтобы
веса всех ребер стали неотрицательными и каждой вершине стало инцидентно хотя бы одно ребро нулевого веса; (сделали)
2) пустое паросочетание объявить текущим паросочетанием M;
3) если в графе все вершины насыщены относительно текущего паросочетания, то СТОП (текущее паросочетание оптимально);
4) иначе выбрать произвольную свободную вершину x ∈ X и искать
M-чередующуюся цепь, которая начинается в вершине x и состоит только из ребер нулевого веса;
5) если такая цепь P построена, то положить M = M ⊕ P и вернуться на шаг 3; (симметрическая разность)
6) иначе для множества вершин X` ⊆ X и Y` ⊆ Y , помеченных в ходе поиска (это вершины венгерского дерева), 
положить d = min{c(x, y)|x ∈ X`, y ∈ Y \ Y`} и применить к графу операцию 
(X`, d, Y`);
7) из тех вершин x ∈ X`, которым стало инцидентно хотя бы одно ребро нулевого веса, возобновить поиск M-чередующейся 
цепи, используя только ребра нулевого веса; если такая цепь P будет построена, то положить M = M ⊕ P и вернуться 
на шаг 3, иначе вернуться на шаг 6 (множества X` и Y` при этом увеличатся).
Я же взял удобную реализацию на потенциалах, которая работает за O(n^3) (O(n^2 m)).

Назовём потенциалом два произвольных массива чисел u[1...n] и v[1...n] таких, что выполняется условие:
u[i] + v[j] <= a[i][j] ~~~~ (i = 1...n, j = 1...n).
(Как видно, числа u[i] соответствуют строкам, а числа v[j] — столбцам матрицы.)
Назовём значением f потенциала сумму его чисел.
С одной стороны, легко заметить, что стоимость искомого решения sol не меньше значения любого потенциала.
С другой стороны, оказывается, что всегда существует решение и потенциал, на которых это неравенство обращается в равенство. 
Венгерский алгоритм, описанный ниже, будет конструктивным доказательством этого факта. Пока же лишь обратим внимание на то, 
что если какое-либо решение имеет стоимость, равную по величине какому-либо потенциалу, то это решение — оптимально.
Зафиксируем некоторый потенциал. Назовём ребро (i,j) жёстким, если выполняется:
u[i] + v[j] = a[i][j]. 
Вспомним об альтернативной постановке задачи о назначениях, с помощью двудольного графа. Обозначим через H двудольный граф, 
составленный только из жёстких рёбер. Фактически, венгерский алгоритм поддерживает для текущего потенциала максимальное по 
количеству рёбер паросочетание M графа H: и как только это паросочетание станет содержать n рёбер, рёбра этого паросочетания 
и будут являться искомым оптимальным решением (ведь это будет решение, стоимость которого совпадает с величиной потенциала).

Перейдём непосредственно к описанию алгоритма:
1) В начале алгоритма потенциал полагается равным нулю u[i] = v[i] = 0, и паросочетание M полагается пустым.
2) Далее, на каждом шаге алгоритма мы пытаемся, не меняя потенциала, увеличить мощность текущего паросочетания M на единицу 
(напоминаем, паросочетание ищется в графе жёстких рёбер H).
Для этого фактически используется обычный алгоритм Куна поиска максимального паросочетания в двудольных графах. Напомним 
этот алгоритм:
Все рёбра паросочетания M ориентируются по направлению от второй доли к первой, все остальные рёбра графа H ориентируются 
в противоположную сторону.
Напомним (из терминологии поиска паросочетаний), что вершина называется насыщенной, если ей смежно ребро из текущего паросочетания. 
Вершина, которой не смежно ни одно ребро из текущего паросочетания, называется ненасыщенной. Путь нечётной длины, в котором первое 
ребро не принадлежит паросочетанию, а для всех последующих рёбер происходит чередование (принадлежит/не принадлежит) — называется 
увеличивающим путём.
Из всех ненасыщенных вершин первой доли запускается обход в глубину/в ширину. Если в результате обхода удалось достигнуть ненасыщенной 
вершины второй доли, то это означает, что мы нашли увеличивающий путь из первой доли во вторую. Если прочередовать рёбра вдоль этого 
пути (т.е. первое ребро включить в паросочетание, второе исключить, третье включить, и т.д.), то тем самым мы увеличим мощность паросочетания 
на единицу.
Если же увеличивающего пути не было, то это означает, что текущее паросочетание M — максимально в графе H, поэтому в таком случае переходим 
к следующему пункту.
3) Если на текущем шаге не удалось увеличить мощность текущего паросочетания, то производится некий пересчёт потенциала таким образом, 
чтобы на следующих шагах появилось больше возможностей для увеличения паросочетания.
Обозначим через Z1 множество вершин первой доли, которые были посещены обходом алгоритма Куна при попытке поиска увеличивающей цепи; 
через Z2 — множество посещённых вершин второй доли.
Посчитаем величину Delta:
Delta = min {для таких i ⊆ Z1, j !⊆ Z2} по всем { a[i][j] - u[i] - v[j] }
Эта величина строго положительна.
Теперь пересчитаем потенциал таким образом: для всех вершин i ⊆ Z1 сделаем u[i] += Delta, а для всех вершин j ⊆ Z2 — сделаем v[j] -= Delta. 
Получившийся потенциал по-прежнему останется корректным потенциалом.
Кроме того, старое паросочетание M из жёстких рёбер можно будет оставить, т.е. все рёбра паросочетания останутся жёсткими.
Наконец, чтобы показать, что изменения потенциала не могут происходить бесконечно, заметим, что при каждом таком изменении потенциала количество 
вершин, достижимых обходом, т.е. |Z1|+|Z2|, строго увеличивается. (При этом нельзя утверждать, что увеличивается количество жёстких рёбер.)
Таким образом, всего может происходить не более n пересчётов потенциала, прежде чем обнаружится увеличивающая цепочка и мощность паросочетания M 
будет увеличена.
Таким образом, рано или поздно будет найден потенциал, которому соответствует совершенное паросочетание M, являющееся ответом на задачу.
Построение алгоритма за O(n^3) (O(n^2 m))

Ключевая идея: теперь мы будем добавлять в рассмотрение строки матрицы одну за одной, а не рассматривать их все сразу. Таким образом, описанный 
выше алгоритм примет вид:
1) Добавляем в рассмотрение очередную строку матрицы a.
2) Пока нет увеличивающей цепи, начинающейся в этой строке, пересчитываем потенциал.
3) Как только появляется увеличивающая цепь, чередуем паросочетание вдоль неё (включая тем самым последнюю строку в паросочетание), и переходим 
к началу (к рассмотрению следующей строки).

Затем восстанавливается ответ, т.е для каждой строки i = 1...n номера выбранного в ней столбца ans[i]. Вместо 1 - кол-во объёма выпуска каждой продукции. 