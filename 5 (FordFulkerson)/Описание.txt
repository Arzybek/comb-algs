Алгоритм Форда-Фалкерсона для поиска максимального паросочетания
Дан неориентированный двудольный граф G(V,E) и требуется найти максимальное паросочетание в нём. 
Обозначим доли исходного графа как L и R. Построим граф G′(V′,E′) следующим образом:
V′=V∪{s,t} (т.е. добавим новый исток s и сток t);
E′={(s,u):u∈L}∪{(u,v):u∈L,v∈R ,(u,v)∈E}∪{(v,t):v∈R}.
Изначально текущее паросочетание пусто. На каждом шаге алгоритма будем поддерживать следующий инвариант: в текущее найденное паросочетание 
входят те и только те ребра, которые направлены из R в L.

1) Ищем в графе G′ путь из s в t поиском в глубину.
2) Если путь найден, перезаписываем текущее паросочетание. Далее инвертируем все рёбра на пути (ребро (u,v) становится ребром (v,u) ) и 
удаляем (s,L) и (R,t) ребра, покрывающие вершины, принадлежащие текущему паросочетанию.
3) Если путь не был найден, значит текущее паросочетание является максимальным, и алгоритм завершает работу. Иначе переходим к пункту 1.
 
Выполняется легкая модификация алгоритма Форда-Фалкерсона, которая указана в пособии Асанова под теоремой Бержа. 
Ищем дополняющую цепь, увеличиваем текущее паросчоетание. Чтобы не расписывать симметрическую разность, делается инвертирование ребер.